df3 <- iris[with(iris, Species == "virginica"),]
points(Sepal.Width ~ Sepal.Length, data = df1)
points(Sepal.Width ~ Sepal.Length, data = df2)
points(Sepal.Width ~ Sepal.Length, data = df3)
points(Sepal.Width ~ Sepal.Length, data = df1, type = 2, col = "blue")
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
points(Sepal.Width ~ Sepal.Length, data = df1, type = 2, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2)
points(Sepal.Width ~ Sepal.Length, data = df3)
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, type = 2, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2)
points(Sepal.Width ~ Sepal.Length, data = df3)
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, pch = 2, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2)
points(Sepal.Width ~ Sepal.Length, data = df3)
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, pch = 24, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2)
points(Sepal.Width ~ Sepal.Length, data = df3)
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, pch = 24, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2)
points(Sepal.Width ~ Sepal.Length, data = df3)
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, pch = 17, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2, pch = 19, col = "red")
points(Sepal.Width ~ Sepal.Length, data = df3, pch = 18, col = "yellow")
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, pch = 17, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2, pch = 19, col = "red")
points(Sepal.Width ~ Sepal.Length, data = df3, pch = 18, col = "yellow")
text(5, 40, "setosa", col = "blue")
text(0, 20, "versicolor", col = "red")
text(20, 20, "virginica", col = "yellow")
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, pch = 17, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2, pch = 19, col = "red")
points(Sepal.Width ~ Sepal.Length, data = df3, pch = 18, col = "yellow")
text(4, 4.5, "setosa", col = "blue")
text(5.5, 2, "versicolor", col = "red")
text(7, 3.5, "virginica", col = "yellow")
df1 <- iris[with(iris, Species == "setosa"),]
df2 <- iris[with(iris, Species == "versicolor"),]
df3 <- iris[with(iris, Species == "virginica"),]
plot(Sepal.Width ~ Sepal.Length, data = iris)
points(Sepal.Width ~ Sepal.Length, data = df1, pch = 17, col = "blue")
points(Sepal.Width ~ Sepal.Length, data = df2, pch = 19, col = "red")
points(Sepal.Width ~ Sepal.Length, data = df3, pch = 18, col = "yellow")
text(4.5, 4, "setosa", col = "blue")
text(5.5, 2, "versicolor", col = "red")
text(7, 3.5, "virginica", col = "yellow")
?hist
?legend
if (length(x) != length(times)) {
tmp <- list(x, times)
max_length <- max(sapply(tmp, length))
tmp <- lapply(tmp, rep, length.out = max_length)
x <- tmp[[1]]
times <- tmp[[2]]
}
# rep it
for (i in 1:length(x)) {
x[i] <- paste(rep(x[i], times[i]), collapse = "")
}
x
}
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x <- as.matrix(x)
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x
x <- as.matrix(x)
x
}
pmin(c(1,3,2), c(3,4,6)
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x
x <- as.matrix(x)
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x
#x <- as.matrix(x)
#x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
as.matrix(as.data.frame(x))
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
as.matrix(as.data.frame(x))
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
do.call(rbind, x)
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
do.call(rbind, x)
class(x)
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x <- do.call(rbind, x)
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x <- do.call(rbind, x)
x
}
pmin(c(1,3,2), c(3,4,6,5))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x <- do.call(rbind, x)
x
}
pmin(c(1,3,2), c(3,4,6,NA))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x <- as.matrix(as.data.frame(x))
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
x <- as.matrix(as.data.frame(x))
x
}
pmin(c(1,3,2), c(3,4,6,5))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {length (x) <- max_length; return (x)})
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {length (x) <- max_length; return (x)})
x
}
pmin(c(1,3,2), c(3,4,6,5))
?rep
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {length (x) <- max_length; rep(x, length.out = max_length);  return (x)})
x
}
pmin(c(1,3,2), c(3,4,6))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {length (x) <- max_length; rep(x, length.out = max_length);  return (x)})
x
}
pmin(c(1,3,2), c(3,4,6,4))
rep(c(1,3,2), length.out = 4)
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {length (x) <- max_length; x <- rep(x, length.out = max_length);  return (x)})
x
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {length (x) <- max_length; x <- rep(x, length.out = max_length);  return (x)})
x
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
x
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- c()
for i in 1:nrow(x) {
res[i] <- min(x[i, ], na.rm)
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- vector(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i, ], na.rm)
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
res <- vector(4)
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i, ], na.rm)
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
res <- integer(4)
res <- integer(4)
res
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i, ], na.rm)
}
res
}
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i, ], na.rm)
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i, ], na.rm)
}
res
}
pmin(c(1,3,2), c(3,4,6,4), na.rm = TRUE)
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i, ], na.rm = na.rm)
}
res
}
pmin(c(1,3,2), c(3,4,6,4), na.rm = TRUE)
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i, ])
}
res
}
pmin(c(1,3,2), c(3,4,6,4), na.rm = TRUE)
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i,])
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i,])
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
res <- min(x[i,])
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for i in 1:nrow(x) {
res[i] <- min(x[i,])
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for (i in 1:nrow(x)) {
res[i] <- min(x[i,])
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for (i in 1:nrow(x)) {
res[i] <- min(x[i,], na.rm = na.rm)
}
res
}
pmin(c(1,3,2), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for (i in 1:nrow(x)) {
res[i] <- min(x[i,], na.rm = na.rm)
}
res
}
pmin(c(1,3,2,NA), c(3,4,6,4))
pmin <- function(..., na.rm = FALSE) {
x <- list(...)
max_length <- max(unlist(lapply(x, FUN = length)))
x <- sapply (x, function (x) {x <- rep(x, length.out = max_length);  return (x)})
res <- integer(nrow(x))
for (i in 1:nrow(x)) {
res[i] <- min(x[i,], na.rm = na.rm)
}
res
}
pmin(c(1,3,2,NA), c(3,4,6,4), na.rm=TRUE)
install.packages('fpp')
options(repos='http://cran.rstudio.com/')
install.packages('fpp')
install.packages('fpp')
install.packages("fpp")
x <- read.table("drug.txt", header = TRUE, sep = ",")
setwd("D:/Junyu Yin/Graduate Study/AI6123 Time Series/project2")
x <- read.table("drug.txt", header = TRUE, sep = ",")
x <- ts(x['value'], frequency = 12)
library(fpp)
plot(x)
fit1 <- hw(x, seasonal="additive")
fit2 <- hw(x, seasonal="multiplicative")
plot(fit1)
plot(fit2)
lines(fitted(fit1), col="red", lty = 2)
lines(fitted(fit2), col="green", lty = 2)
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
lines(fitted(fit1), col="red", lty = 2)
plot(x)
lines(fitted(fit1), col="red", lty = 2)
lines(fitted(fit2), col="green", lty = 2)
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
plot(x)
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
lines(x, type="o")
lines(x, type="o")
plot(x)
lines(x, type="o")
lines(fitted(fit1), col="red", lty = 2)
lines(fitted(fit2), col="green", lty = 2)
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
plot(x)
lines(fitted(fit1), col="red", lty = 2)
lines(fitted(fit2), col="green", lty = 2)
plot(fit1)
plot(fit2)
lines(fitted(fit1), col="red", lty = 2)
lines(fitted(fit2), col="green", lty = 2)
lines(x, type="o")
x <- read.table("drug.txt", header = TRUE, sep = ",")
lines(fit2$mean, type="o", col="green")
lines(fit1$mean, type="o", col="red")
plot(x)
plot(x)
x <- ts(x['value'], frequency = 12)
plot(x)
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
lines(x, type="o")
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
lines(fitted(fit1), col="red", lty = 2)
plot(x)
plot(fit1)
plot(fit2)
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
lines(x, type="o")
plot(x)
lines(fit1$mean, type="o", col="red")
plot(x)
lines(fitted(fit1), col="red", lty = 2)
lines(fitted(fit2), col="green", lty = 2)
plot(x)
?plot
plot(x)
lines(fit1$x, type="o", col="black")
lines(fit1$mean, type="o", col="red")
?lines
lines(fit1$x, type="o", col="black")
plot(x)
plot(x, xlim=25)
plot(x, xlim=(0, 25))
plot(x, xlim=(0, 25))
plot(x, xlim=(0, 25))
plot(x, xlim=c(0, 25))
lines(x, type="o")
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
plot(x, xlim=c(0, 24), ylim=c(0, 35))
lines(x, type="o")
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
plot(x, xlim=c(0, 24), ylim=c(0, 36))
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
lines(x, type="o")
plot(x, xlim=c(0, 22), ylim=c(0, 36))
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
x <- read.table("drug.txt", header = TRUE, sep = ",")
x <- ts(x['value'], frequency = 12)
legend ("topleft", lty=1, pch=2, col=1:3, c("data", "HWADD", "HWMUL"))
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
legend ("topleft", lty=1, pch=0, col=1:3, c("data", "HWADD", "HWMUL"))
legend ("topleft", lty=1, pch=5, col=1:3, c("data", "HWADD", "HWMUL"))
legend ("topleft", lty=1, pch=20, col=1:3, c("data", "HWADD", "HWMUL"))
lines(x, pch=20)
plot(x, xlim=c(0, 22), ylim=c(0, 36))
lines(fit1$mean, type="o", col="red")
lines(fit2$mean, type="o", col="green")
legend ("topleft", lty=1, pch=20, col=1:3, c("data", "HWADD", "HWMUL"))
legend ("topleft", lty=1, pch=1, col=1:3, c("data", "HWADD", "HWMUL"))
lines(x, type="o")
fit1$model
fit2$model
